version: 2.1

# -------------------------
#          ORBS
# -------------------------
orbs:
  terraform_circle: circleci/terraform@3.0.0
  terraform: suzuki-shunsuke/terraform@0.2.8
  aws-s3: circleci/aws-s3@3.0.0
# -------------------------
#     REFERENCES
# -------------------------
references:
  only_main: &only_main
    branches:
      only: main
  not_main: &not_main
    branches:
      ignore: main

# -------------------------
#          COMMANDS
# -------------------------
commands:
  local_build:
    description: "Building locally, caching results"
    steps:


# -------------------------
#          JOBS
# --------------------------
jobs:
  deploy:
    docker:
      - image: 'cimg/python:3.6'
    steps:
      - checkout
      - aws-s3/copy:
          arguments: '--recursive'
          from: ./web
          to: 's3://nasa-api-web'

workflows:
#terraform deploy workflow
  terraform:
    jobs:
      - terraform/setup:
          context: devapps
          custom_setup:
            - terraform/install_tflint:
                install_dir: .orb-terraform/bin
            - run:
                command: |
                  tfenv install
                name: tfenv install
                shell: /bin/bash -eu -o pipefail
          name: setup
      - terraform/test:
          context: devapps
          custom_tests:
            - terraform/tflint:
                dir: .
          dir: .
          name: test main
          requires:
            - setup
          tfnotify_config_path: .tfnotify.yaml
      - terraform/test:
          context: devapps
          custom_tests:
            - terraform/tflint:
                dir: aws/staging
          dir: aws/staging
          name: test aws/staging
          requires:
            - setup
          tfnotify_config_path: .tfnotify.yaml
      - terraform/test:
          context: devapps
          custom_tests:
            - terraform/tflint:
                dir: aws/production
          dir: aws/production
          name: test aws/production
          requires:
            - setup
          tfnotify_config_path: .tfnotify.yaml
      - terraform/check_changed:
          context: devapps
          name: Check changed states
          requires:
            - setup
            - test main
            - test aws/staging
            - test aws/production
      - hold:
            name: hold_apply
            type: approval
            requires:
              - Check changed states
      - terraform/apply: #  review and apply plan
          context: devapps
          filters:
            branches:
              only:
                - main
          name: apply
          requires:
            - hold_apply
          tfnotify_config_path: .tfnotify.yaml

  #build_deploy workflow
  build_deploy:
      jobs:
      - hold:
          name: hold_deploy
          type: approval
      - deploy:
          requires:
          - hold_deploy